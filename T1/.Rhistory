acf(detrend, lag.max = 25)
pacf(detrend, lag.max = 25)
fit.model <- lm(formula = treino ~ t + X2 + X3 + inter1 + dummies, data = df_treino)
summary(fit.model)
ggplot(df_treino, aes(x = t, y = treino)) +
geom_line(alpha=0.7) +                           # observed data
geom_line(aes(x = t, y = fit.model$fitted.values),  # fitted data
color='red', alpha=0.5)
par(mfrow=c(1,2))
acf(fit.model$residuals, lag.max = 25)
pacf(fit.model$residuals, lag.max = 25)
fit.res <- Arima(fit.model$residuals, order = c(1,0,2), include.mean = FALSE)
summary(fit.res)
checkresiduals(fit.res)
jarque.bera.test(fit.res$residuals)
pacf(fit.res$residuals, lag.max = 25)
#----------PREDICTION-------------
set.seed(2000)
new_t <- c(181:210)
new_inter1 <- numeric(length(new_t))
new_X2 <- new_t - 133
new_X3 <- new_t - 160
new_dummies <- dummies[1:length(new_t)]
newdata <- data.frame(t = new_t, inter1 = new_inter1, X2 = new_X2,
X3 = new_X3, dummies = new_dummies)
err <- arima.sim(list(ar=fit.res$coef["ar1"],ma=c(fit.res$coef["ma1"],fit.res$coef["ma2"])),
sd=fit.res$sigma,length(new_t))
pred <- predict(fit.model, newdata =  newdata)
plot(pred+err, type = 'l')
par(mfrow=c(1,1))
pred
pred <- predict(fit.model, newdata =  newdata) + err
plot(pred, type = 'l')
MSE(pred, teste)
mse <- mean((pred - teste)^2)
pred <- ts(predict(fit.model, newdata =  newdata) + err, frequency = 12)
plot(pred, type = 'l')
mse <- mean((pred - teste)^2)
mse
post_t <- c(1:length(teste)) + length(treino)
post_t
df_teste <- data.frame(t = new_t, fit = pred, actual = teste)
p <- ggplot(df_treino, aes(x = t, y = treino))
p
p <- ggplot(df_treino, aes(x = t, y = treino)) + geom_line()
p
p <- ggplot()
p
+ geom_line(data = df_teste, aes(x = t, y = teste))
p <- ggplot() + geom_line(data = df_teste, aes(x = t, y = teste))
#+ geom_line(data = df_treino, aes(x = t, y = treino))
# + geom_line(data = df_treino, aes(x = t, y = fit), colour = 'red')
p
p <- ggplot() + geom_line(data = df_treino, aes(x = t, y = treino))
+ geom_line(data = df_teste, aes(x = t, y = teste))
p <- ggplot() + geom_line(data = df_treino, aes(x = t, y = treino))+ geom_line(data = df_teste, aes(x = t, y = teste))+ geom_line(data = df_teste, aes(x = t, y = fit), colour = 'red')
p
p <- ggplot() + geom_line(data = df_treino, aes(x = t, y = treino))
p<- p + geom_line(data = df_teste, aes(x = t, y = teste))
p<- p + geom_line(data = df_teste, aes(x = t, y = fit), colour = 'red')
p
plot(BoxCox(total,-2))
par(mfrow=c(1,1))
plot(BoxCox(total,-2))
plot(BoxCox(total,-3))
plot(BoxCox(total,-5))
plot(BoxCox(total,-1))
plot(BoxCox(total,1))
plot(BoxCox(total,5))
casa <- ES$Residencial
lcasa <- log(casa)
dcasa <- diff(lcasa)
ddcasa <- diff(dcasa, lag = 12)
plot(lcasa)
plot(dcasa)
par(mfrow=c(1,2))
acf(dcasa)
pacf(dcasa)
par(mfrow=c(1,2))
acf(ddcasa, lag.max = 25)
pacf(ddcasa, lag.max = 25)
par(mfrow=c(1,1))
modelo <- Arima(lcasa, order = c(2,1,1), seasonal = c(1,1,1), xreg = xreg)
summary(modelo)
checkresiduals(modelo)
modelo2 <- auto.arima(lcasa, stepwise = FALSE, trace = TRUE, xreg = xreg)
summary(modelo2)
checkresiduals(modelo2)
pacf(modelo2$residuals, lag.max = 25)
modelo2 <- auto.arima(lcasa, stepwise = FALSE, trace = TRUE, xreg = xreg)
pandemia <- numeric(210)
pandemia[195:210] <- 1
modelo <- Arima(lcasa, order = c(2,1,1), seasonal = c(1,1,1), xreg = pandemia)
summary(modelo)
checkresiduals(modelo)
modelo2 <- auto.arima(lcasa, stepwise = FALSE, trace = TRUE, xreg = pandemia)
summary(modelo2)
checkresiduals(modelo2)
pacf(modelo2$residuals, lag.max = 25)
modelo3 <- Arima(lcasa, order = c(0,1,1), seasonal = c(1,1,1), xreg = pandemia)
summary(modelo3)
checkresiduals(modelo3)
pacf(modelo3$residuals, lag.max = 25)
modelo3$coef[4]
modelo$coef[4]
modelo2$coef[4]
modelo3$coef[4]
summary(modelo2)
modelo2$coef[3]
modelo$coef[4]
modelo2$coef[3]
modelo3$coef[4]
#Passando a ts para df para melhor sincronia com o ggplot
dfES <- data.frame(ES)
dfES[['date']] = seq(as.Date("2004-01-01"), as.Date("2021-06-01"), "1 month")
summary(dfES)
colunas <- c("Industrial","Comercial","Cativo","Residencial", "Outros","Total")
dfES$date = as.yearmon(dfES$date)
meltedES <- melt(dfES, id = 'date')
p <- ggplot(meltedES, aes(x = date, y = value, colour = variable)) + geom_line()
p <- p + labs(x = 'Ano/mÃªs', y = 'Consumo MWh', colour = 'Categoria')
p
total <- log(ES$Total)
treino <- ts(total[1:180], frequency = 12)
teste <- ts(total[181:210], frequency = 12)
plot(treino, type= 'l')
plot(decompose(treino))
dummies <- factor(cycle(treino))
inter1 <- numeric(length(treino))
inter2 <- numeric(length(treino))
inter3 <- numeric(length(treino))
inter1[59:66] <- 1
inter2[133:180] <- 1
inter3[160:180] <- 1
t <- c(1:length(treino))
df_treino <- data.frame(treino, t, dummies, inter1, inter2, inter3)
df_treino$t2 <- df_treino$t -133
df_treino$t3 <- df_treino$t -160
df_treino$X2 <- df_treino$t2 * df_treino$inter2
df_treino$X3 <- df_treino$t3 * df_treino$inter3
fit.reg <- lm(formula = treino ~ t + X2 + X3 + inter1, data = df_treino)
summary(fit.reg)
ggplot(df_treino, aes(x = t, y = treino)) +
geom_line(alpha=0.7) +                           # observed data
geom_line(aes(x = t, y = fit.reg$fitted.values),  # fitted data
color='red', alpha=0.5)
detrend <- treino - fit.reg$fitted.values
plot(detrend, type = 'l')
par(mfrow=c(1,2))
acf(detrend, lag.max = 25)
pacf(detrend, lag.max = 25)
fit.model <- lm(formula = treino ~ t + X2 + X3 + inter1 + dummies, data = df_treino)
summary(fit.model)
ggplot(df_treino, aes(x = t, y = treino)) +
geom_line(alpha=0.7) +                           # observed data
geom_line(aes(x = t, y = fit.model$fitted.values),  # fitted data
color='red', alpha=0.5)
#----------PREDICTION-------------
set.seed(2000)
new_t <- c(181:210)
new_inter1 <- numeric(length(new_t))
new_X2 <- new_t - 133
new_X3 <- new_t - 160
new_dummies <- dummies[1:length(new_t)]
newdata <- data.frame(t = new_t, inter1 = new_inter1, X2 = new_X2,
X3 = new_X3, dummies = new_dummies)
err <- arima.sim(list(ar=fit.res$coef["ar1"],ma=c(fit.res$coef["ma1"],fit.res$coef["ma2"])),
sd=fit.res$sigma,length(new_t))
pred <- ts(predict(fit.model, newdata =  newdata) + err, frequency = 12)
plot(pred, type = 'l')
mse <- mean((pred - teste)^2)
df_teste <- data.frame(t = new_t, fit = pred, teste = teste)
p <- ggplot() + geom_line(data = df_treino, aes(x = t, y = treino))
p <- p + geom_line(data = df_teste, aes(x = t, y = teste))
p <- p + geom_line(data = df_teste, aes(x = t, y = fit), colour = 'red')
p
conf <- predict(fit.model, newdata = newdata, interval = 'confidence')
conf
df_teste2 <-  data.frame(t = new_t, fit = conf$fit, lwr = conf$lwr, upr = conf$upr , teste = teste)
conf[1]
conf[2]
conf[2,1]
conf[,1]
df_teste2 <-  data.frame(t = new_t, fit = conf[,1], lwr = conf[,2], upr = conf[,3] , teste = teste)
p <- p + geom_line(data = df_teste2, aes(x = t, y = lwr),colour = 'blue')
p <- p + geom_line(data = df_teste2, aes(x = t, y = upr),colour = 'blue')
p
total <- ES$Total
plot(BoxCox(total,5))
par(mfrow=c(1,1))
plot(BoxCox(total,5))
plot(BoxCox(total,-5))
total <- ES$Total
plot(BoxCox(total,-5))
plot(BoxCox(total,-2))
plot(BoxCox(total,-3))
plot(BoxCox(total,-2.5))
plot(BoxCox(total,-2))
plot(BoxCox(total,-1))
plot(BoxCox(total,0))
plot(BoxCox(total,-1))
plot(BoxCox(total,0))
plot(BoxCox(total,-1))
plot(BoxCox(total,-2))
plot(BoxCox(total,1))
treino <- ts(log(total[1:180]), frequency = 12)
teste <- ts(log(total[181:210]), frequency = 12)
xreg <- numeric(180)
xreg[59:66] <- 1
xreg_in <- ts(xreg, frequency = 12)
xreg_out <- ts(numeric(36), frequency = 12)
par(mfrow=c(1,2))
acf(treino)
pacf(treino)
par(mfrow=c(1,2))
acf(diff(treino))
pacf(diff(treino))
boxcox(total, lambda = c(-2,2))
install.packages("EnvStats")
library(EnvStats)
boxcox(total, lambda = c(-2,2))
boxcox(numeric(total), lambda = c(-2,2))
boxcox(as.numeric(total), lambda = c(-2,2))
boxcox(as.numeric(total), lambda = c(-2,2), optimize = TRUE)
xreg_out <- ts(c(181:210), frequency = 12)
xreg_out <- ts(numeric(length(teste)), frequency = 12)
model1 <- auto.arima(treino, stepwise = FALSE, trace = TRUE, xreg = xreg_in)
nohole <- ts(log(total[67:180]), frequency = 12)
nohole.t <- ts(log(total[181:210]), frequency = 12)
autoplot(nohole)
par(mfrow=c(1,2))
acf(nohole)
pacf(nohole)
par(mfrow=c(1,2))
acf(diff(nohole))
pacf(diff(nohole))
acf(diff(nohole), lag.max = 24)
pacf(diff(nohole), lag.max = 24)
model2 <- auto.arima(nohole, stepwise = FALSE, trace = TRUE)
summary(model1)
summary(model2)
checkresiduals(model2)
jarque.bera.test(model2$residuals)
pacf(model2$residuals, lag.max = 24)
acf(model2$residuals, lag.max = 24)
f2 <- forecast::forecast(model2, h = 3)
autoplot(f2)
autoplot(model2$fitted)
length(teste)
f2 <- forecast::forecast(model2, h = 30)
autoplot(f2)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,2))
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
summary(model3)
model2 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,1))
summary(model2)
checkresiduals(model2)
jarque.bera.test(model2$residuals)
pacf(model2$residuals, lag.max = 24)
acf(model2$residuals, lag.max = 24)
f2 <- forecast::forecast(model2, h = 30)
autoplot(f2)
autoplot(model2$fitted)
autoplot(f2) + autolayer(teste)
f <- forecast::forecast(model1, xreg = xreg_out)
autoplot(f)
par(mfrow=c(1,2))
acf(treino)
pacf(treino)
par(mfrow=c(1,2))
acf(diff(treino))
pacf(diff(treino))
mean((model1$fitted - teste)^2)
mean((model2$fitted - teste)^2)
mean((model3$fitted - teste)^2)
sqrt(0.016)
?diff
par(mfrow=c(1,2))
acf(diff(diff(nohole), lag = 8), lag.max = 24)
pacf(diff(diff(nohole), lag = 8), lag.max = 24)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,0,1))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,0,2))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,0,4))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(1,0,1))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,1))
summary(model3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,2))
summary(model3)
model4 <- Arima(nohole, order = c(0,1,2), seasonal = c(0,1,2))
summary(model4)
f4 <- forecast::forecast(model4, h = 30)
autoplot(f4)
model4 <- Arima(nohole, order = c(0,1,4), seasonal = c(0,1,2))
summary(model4)
f4 <- forecast::forecast(model4, h = 30)
autoplot(f4)
model4 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,4))
summary(model4)
f4 <- forecast::forecast(model4, h = 30)
autoplot(f4)
model4 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,3))
summary(model4)
f4 <- forecast::forecast(model4, h = 30)
autoplot(f4)
model4 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,1,5))
summary(model4)
f4 <- forecast::forecast(model4, h = 30)
autoplot(f4)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,0,2))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
model3 <- Arima(nohole, order = c(0,1,1), seasonal = c(0,0,4))
summary(model3)
f3 <- forecast::forecast(model3, h = 30)
autoplot(f3)
f2 <- forecast::forecast(model2, h = 30)
autoplot(f2)
t = c(1:length(nohole))
t_pos = c(length(nohole)+1:length(nohole) + length(teste)+1)
df_pre = data.frame(t = t, treino = nohole)
df_pos = data.frame(t = t_pos, teste = teste, fit = model2$fitted)
length(t_pos)
length(nohole)
t_pos = c(length(nohole)+1: length(nohole) + length(teste)+1)
length(t_pos)
t_pos = c(115: 145)
length(t_pos)
length(teste)
t = c(1:length(nohole))
t_pos = c(115: 144)
df_pre = data.frame(t = t, treino = nohole)
df_pos = data.frame(t = t_pos, teste = teste, fit = model2$fitted)
model2$fitted
f3$fitted
df_pos = data.frame(t = t_pos, teste = teste, fit = f3$fitted)
f3$x
f3$mean
df_pos = data.frame(t = t_pos, teste = teste, fit = f3$mean)
p <- ggplot() + geom_line(data = df_pre, aes(x = t, y = treino))
p <- p + geom_line(data = df_pos, aes(x = t, y = teste))
p <- p + geom_line(data = df_pos, aes(x = t, y = fit), colour = 'red')
p
df_pos = data.frame(t = t_pos, teste = teste, fit = f2$mean)
p <- ggplot() + geom_line(data = df_pre, aes(x = t, y = treino))
p <- p + geom_line(data = df_pos, aes(x = t, y = teste))
p <- p + geom_line(data = df_pos, aes(x = t, y = fit), colour = 'red')
p
autoplot(f2)
plot(comercial)
par(mfrow=c(1,1))
plot(comercial)
plot(log(comercial))
plot(comercial)
plot(diff(comercial))
plot(comercial)
plot(BoxCox(comercial,-1) )
plot(BoxCox(comercial,1) )
plot(BoxCox(comercial,0) )
plot(BoxCox(comercial,-1) )
plot(BoxCox(comercial,-2) )
plot(BoxCox(comercial,-1) )
pandemia
plot(BoxCox(comercial,0) )
plot(BoxCox(comercial,-1) )
b.comercial <- BoxCox(comercial,-1)
model.c1 <- auto.arima(b.comercial, xreg = pandemia)
summary(model.c1)
db.comercial <- diff(b.comercial)
plot(db.comercial)
par(mfrow=c(1,2))
acf(db.comercial,lag.max = 24)
pacf(db.comercial,lag.max = 24)
par(mfrow=c(1,1))
ddb.comercial <- diff(db.comercial, lag = 12)
par(mfrow=c(1,2))
acf(ddb.comercial,lag.max = 24)
pacf(ddb.comercial,lag.max = 24)
model.c1 <- Arima(b.comercial, order = c(1,1,1), seasonal = c(2,1,1), xreg = pandemia)
?Arima
model.c1 <- Arima(b.comercial, order = c(1,1,1), seasonal = c(2,1,1),
xreg = pandemia, method = "CSS")
summary(model.c1)
pandemia
length(pandemia)
length(b.comercial)
model.c1 <- Arima(b.comercial, order = c(1,1,1), seasonal = c(1,1,1),
xreg = pandemia)
model.c1 <- Arima(b.comercial, order = c(1,1,1), seasonal = c(1,1,1),
xreg = pandemia, hessian = FALSE)
b.comercial <- BoxCox(comercial,0)
db.comercial <- diff(b.comercial)
plot(db.comercial)
ddb.comercial <- diff(db.comercial, lag = 12)
par(mfrow=c(1,2))
acf(ddb.comercial,lag.max = 24)
pacf(ddb.comercial,lag.max = 24)
model.c1 <- Arima(b.comercial, order = c(1,1,1), seasonal = c(1,1,1),
xreg = pandemia)
summary(model.c1)
model.c2 <- auto.arima(b.comercial,xreg = pandemia)
summary(model.c2)
b.comercial[195]
InvBoxCox(11.95648)
InvBoxCox(11.95648,0)
InvBoxCox(11.95648-0.18,0)
modelo$coef[4]
modelo2$coef[3]
modelo3$coef[4]
lcasa[195]
InvBoxCox(12.38964,0)
InvBoxCox(12.38964-0.01818505,0)
plot(cativo)
par(mfrow=c(1,1))
plot(cativo)
plot(log(cativo))
dfES
dfES['date']
#---------cativ0-----------
cativo <- ES$Cativo[73:210]
lcativo <- log(ES$Cativo)
plot(lcativo)
#---------cativ0-----------
cativo <- ES$Cativo[73:210]
lcativo <- log(cativo)
plot(lcativo)
#---------cativ0-----------
cativo <- ts(ES$Cativo[73:210], frequency = 12)
lcativo <- log(cativo)
plot(lcativo)
model.ca1 <- auto.arima(lcativo, xreg = pandemia)
model.ca1 <- auto.arima(lcativo, xreg = pandemia[73:210])
summary(model.ca1)
ES$Cativo[195]
log(ES$Cativo[195])
log(ES$Cativo[195]) - 0.0663
InvBoxCox(log(ES$Cativo[195]) - 0.0663,0)
outros <- ES$Outros
plot(outros)
plot(log(outros))
model.o <- auto.arima(outros, xreg = pandemia)
summary(model.o)
plot(model.o$fitted)
outros <- log(ES$Outros)
model.o <- auto.arima(outros, xreg = pandemia)
summary(model.o)
outros[195]
InvBoxCox(outros[195]-0.1006,0)
InvBoxCox(outros[195],0)
outros[194]
industrial <- log(ES$Industrial)
plot(industrial)
industrial
?auto.arima
industrial <- ts(log(ES$Industrial[97:210]),frequency = 12)
crash <- numeric(length(industrial))
xreg <- matrix(c(crash,pandemia[97:210]))
xreg
xreg <- matrix(crash = crash, pandemia = pandemia[97:210]))
xreg <- matrix(crash = crash, pandemia = pandemia[97:210])
xreg <- matrix()
xreg[,1] <- crash
xreg <- matrix(ncol = 2,nrow = length(industrial))
xreg[,1] <- crash
xreg[,2] <- pandemia[97:210]
model.i <- auto.arima(industrial, xreg = xreg)
model.i <- auto.arima(industrial, xreg = crash)
model.i <- auto.arima(industrial, xreg = pandemia[97:210])
summary(model.i)
pacf(ddb.comercial,lag.max = 24)
par(mfrow=c(1,2))
acf(diff(industrial),lag.max = 24)
pacf(diff(industrial),lag.max = 24)
crash[143] <- 1
crash[143] <- 1
xreg <- matrix(ncol = 2,nrow = length(industrial))
xreg[,1] <- crash
xreg[,2] <- pandemia[97:210]
i
crash <- numeric(length(industrial))
industrial <- ts(log(ES$Industrial[97:210]),frequency = 12)
crash <- numeric(length(industrial))
crash[143] <- 1
xreg <- matrix(ncol = 2,nrow = length(industrial))
xreg[,1] <- crash
143-96
industrial <- ts(log(ES$Industrial[97:210]),frequency = 12)
crash <- numeric(length(industrial))
crash[47] <- 1
xreg <- matrix(ncol = 2,nrow = length(industrial))
xreg[,1] <- crash
xreg[,2] <- pandemia[97:210]
model.i <- Arima(industrial, order = c(0,1,1), seasonal = c(1,0,1) , xreg = xreg)
summary(model.i)
model.i2 <- auto.arima(industrial, xreg = xreg)
summary(model.i2)
ES$Industrial[195]
log(ES$Industrial[195])
InvBoxCox(12.7355+0.0283,0)
